<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:zstack="http://zstack.org/schema/zstack"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://zstack.org/schema/zstack 
    http://zstack.org/schema/zstack/plugin.xsd"
       default-init-method="init" default-destroy-method="destroy">

    <bean id="HostCpuOverProvisioningManager" class="org.zstack.compute.allocator.HostCpuOverProvisioningManagerImpl"/>

    <bean id="HostCapacityOverProvisioningManager"
          class="org.zstack.compute.allocator.HostCapacityOverProvisioningManagerImpl"/>

    <util:list id="SimulatorBackupStorageMetric">
        <value>SimulatorPrimaryStorage</value>
    </util:list>

    <util:list id="SftpBackupStorageMetric">
        <value>NFS</value>
        <value>SharedMountPoint</value>
        <value>LocalStorage</value>
    </util:list>

    <util:list id="ImageStoreBackupStorageMetric">
        <value>NFS</value>
        <value>SharedMountPoint</value>
        <value>LocalStorage</value>
        <value>Ceph</value>
        <value>ZSES</value>
    </util:list>

    <util:list id="CephMetric">
        <value>Ceph</value>
        <value>XSky</value>
    </util:list>

    <util:list id="FusionstorMetric">
        <value>Fusionstor</value>
    </util:list>

    <util:list id="SurfsMetric">
        <value>Surfs</value>
    </util:list>

    <util:list id="VCenterMetric">
        <value>VCenter</value>
    </util:list>

    <util:map id="BackupStoragePrimaryStorageMetrics" value-type="java.util.List">
        <entry key="SftpBackupStorage" value-ref="SftpBackupStorageMetric"/>
        <entry key="Fusionstor" value-ref="FusionstorMetric"/>
        <entry key="Ceph" value-ref="CephMetric"/>
        <entry key="Surfs" value-ref="SurfsMetric"/>
        <entry key="ImageStoreBackupStorage" value-ref="ImageStoreBackupStorageMetric"/>
        <entry key="SimulatorBackupStorage" value-ref="SimulatorBackupStorageMetric"/>
        <entry key="VCenter" value-ref="VCenterMetric"/>
    </util:map>

    <bean id="HostAllocatorManager" class="org.zstack.compute.allocator.HostAllocatorManagerImpl">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.Service"/>
            <zstack:extension interface="org.zstack.header.vm.VmAbnormalLifeCycleExtensionPoint"/>
        </zstack:plugin>

        <property name="backupStoragePrimaryStorageMetrics" ref="BackupStoragePrimaryStorageMetrics"/>
    </bean>

    <bean id="HostCapacityReserveManager" class="org.zstack.compute.allocator.HostCapacityReserveManagerImpl">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
        </zstack:plugin>
    </bean>

    <bean id="HostAllocatorApiInterceptor" class="org.zstack.compute.allocator.HostAllocatorApiInterceptor">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.apimediator.ApiMessageInterceptor"/>
        </zstack:plugin>
    </bean>

    <bean id="LeastVmPreferredHostAllocatorStrategyFactory"
          class="org.zstack.compute.allocator.LeastVmPreferredHostAllocatorStrategyFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.allocator.HostAllocatorStrategyFactory"/>
        </zstack:plugin>

        <property name="allocatorFlowNames">
            <list>
                <value>org.zstack.compute.allocator.AttachedL2NetworkAllocatorFlow</value>
                <value>org.zstack.compute.allocator.BackupStorageSelectPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostStateAndHypervisorAllocatorFlow</value>
                <value>org.zstack.compute.allocator.ImageBackupStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostCapacityAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AttachedVolumePrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AvoidHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.TagAllocatorFlow</value>
                <value>org.zstack.compute.allocator.FilterFlow</value>
            </list>
        </property>
        <property name="sortFlowNames">
            <list>
                <value>org.zstack.compute.allocator.PrimaryStoragePrioritySortFlow</value>
                <value>org.zstack.compute.allocator.LeastVmPreferredSortFlow</value>
            </list>
        </property>
    </bean>

    <bean id="DefaultHostAllocatorStrategyFactory"
          class="org.zstack.compute.allocator.DefaultHostAllocatorStrategyFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.allocator.HostAllocatorStrategyFactory"/>
        </zstack:plugin>

        <property name="allocatorFlowNames">
            <list>
                <value>org.zstack.compute.allocator.AttachedL2NetworkAllocatorFlow</value>
                <value>org.zstack.compute.allocator.BackupStorageSelectPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostStateAndHypervisorAllocatorFlow</value>
                <value>org.zstack.compute.allocator.ImageBackupStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostCapacityAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AvoidHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.TagAllocatorFlow</value>
                <value>org.zstack.compute.allocator.FilterFlow</value>
            </list>
        </property>
        <property name="sortFlowNames">
            <list>
                <value>org.zstack.compute.allocator.PrimaryStoragePrioritySortFlow</value>
            </list>
        </property>
    </bean>

    <bean id="DesignatedHostAllocatorStrategyFactory"
          class="org.zstack.compute.allocator.DesignatedHostAllocatorStrategyFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.allocator.HostAllocatorStrategyFactory"/>
        </zstack:plugin>

        <property name="allocatorFlowNames">
            <list>
                <value>org.zstack.compute.allocator.AttachedL2NetworkAllocatorFlow</value>
                <value>org.zstack.compute.allocator.BackupStorageSelectPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.DesignatedHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.ImageBackupStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostStateAndHypervisorAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostCapacityAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AvoidHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.TagAllocatorFlow</value>
                <value>org.zstack.compute.allocator.FilterFlow</value>
                <value>org.zstack.compute.allocator.LastHostAllocatorFlow</value>
            </list>
        </property>
    </bean>

    <bean id="LastHostPreferredAllocatorStrategyFactory"
          class="org.zstack.compute.allocator.LastHostPreferredAllocatorStrategyFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.allocator.HostAllocatorStrategyFactory"/>
        </zstack:plugin>

        <property name="allocatorFlowNames">
            <list>
                <value>org.zstack.compute.allocator.AttachedL2NetworkAllocatorFlow</value>
                <value>org.zstack.compute.allocator.BackupStorageSelectPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostStateAndHypervisorAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostCapacityAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AttachedVolumePrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AvoidHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.TagAllocatorFlow</value>
                <value>org.zstack.compute.allocator.FilterFlow</value>
                <value>org.zstack.compute.allocator.LastHostAllocatorFlow</value>
            </list>
        </property>
    </bean>

    <bean id="MigrateVmHostAllocatorStrategyFactory"
          class="org.zstack.compute.allocator.MigrateVmHostAllocatorStrategyFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.allocator.HostAllocatorStrategyFactory"/>
        </zstack:plugin>

        <property name="allocatorFlowNames">
            <list>
                <value>org.zstack.compute.allocator.AttachedL2NetworkAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostStateAndHypervisorAllocatorFlow</value>
                <value>org.zstack.compute.allocator.BackupStorageSelectPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostCapacityAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AttachedVolumePrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.DesignatedHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostPrimaryStorageAllocatorFlow</value>
                <value>org.zstack.compute.allocator.AvoidHostAllocatorFlow</value>
                <value>org.zstack.compute.allocator.HostOsVersionAllocatorFlow</value>
                <value>org.zstack.compute.allocator.TagAllocatorFlow</value>
                <value>org.zstack.compute.allocator.FilterFlow</value>
            </list>
        </property>
        <property name="sortFlowNames">
            <list>
                <value>org.zstack.compute.allocator.PrimaryStoragePrioritySortFlow</value>
                <value>org.zstack.compute.allocator.LeastVmPreferredSortFlow</value>
            </list>
        </property>
    </bean>
</beans>
