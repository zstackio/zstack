<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:zstack="http://zstack.org/schema/zstack"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://zstack.org/schema/zstack 
    http://zstack.org/schema/zstack/plugin.xsd"
    default-init-method="init" default-destroy-method="destroy">

    <bean id="ApplianceVmFacade"
        class="org.zstack.appliancevm.ApplianceVmFacadeImpl">
        <property name="createApplianceVmWorkFlow">
            <list>
		        <value>org.zstack.compute.vm.VmImageSelectBackupStorageFlow</value>
                <value>org.zstack.compute.vm.VmAllocateHostFlow</value>
                <value>org.zstack.compute.vm.ApplianceVmAllocatePrimaryStorageFlow</value>
                <value>org.zstack.compute.vm.VmAllocateVolumeFlow</value>
                <value>org.zstack.appliancevm.ApplianceVmAllocateNicFlow</value>
                <value>org.zstack.compute.vm.VmInstantiateResourcePreFlow</value>
                <value>org.zstack.compute.vm.VmCreateOnHypervisorFlow</value>
                <value>org.zstack.compute.vm.VmInstantiateResourcePostFlow</value>
            </list>
        </property>

        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component" />
            <zstack:extension interface="org.zstack.header.Service" />
        </zstack:plugin>
    </bean>

    <bean id="ApplianceVmFactory"
        class="org.zstack.appliancevm.ApplianceVmFactory">

        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component" />
            <zstack:extension interface="org.zstack.header.vm.VmInstanceFactory" />
        </zstack:plugin>
    </bean>

    <bean id="ApplianceVmKvmBackend" class="org.zstack.appliancevm.ApplianceVmKvmBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.kvm.KVMStartVmAddonExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="ApplianceVmKvmBootstrapFlowFactory" class="org.zstack.appliancevm.ApplianceVmKvmBootstrapFlowFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.appliancevm.ApplianceVmBootstrapFlowFactory" />
        </zstack:plugin>
    </bean>

	<bean id="ApplianceVmCascadeExtension" class="org.zstack.appliancevm.ApplianceVmCascadeExtension">
		<zstack:plugin>
			<zstack:extension interface="org.zstack.core.cascade.CascadeExtensionPoint" />
		</zstack:plugin>
	</bean>

    <bean id="ApplianceVmManagementIpChecker" class="org.zstack.appliancevm.ApplianceVmManagementIpChecker">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.vm.VmBeforeCreateOnHypervisorExtensionPoint" />
            <zstack:extension interface="org.zstack.header.vm.VmBeforeStartOnHypervisorExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="ApplianceVmPriorityUpgradeExtensionPoint" class="org.zstack.appliancevm.ApplianceVmPriorityUpgradeConfigExtensionPoint">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.kvm.KVMStartVmExtensionPoint"/>
            <zstack:extension interface="org.zstack.header.vm.UpdatePriorityConfigExtensionPoint"/>
        </zstack:plugin>
    </bean>

</beans>
