<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:zstack="http://zstack.org/schema/zstack"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://zstack.org/schema/zstack 
    http://zstack.org/schema/zstack/plugin.xsd"
       default-init-method="init" default-destroy-method="destroy">

    <bean id="L3NetworkApiInterceptor" class="org.zstack.network.l3.L3NetworkApiInterceptor">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.apimediator.ApiMessageInterceptor"/>
        </zstack:plugin>
    </bean>

    <bean id="L2NetworkApiInterceptor" class="org.zstack.network.l2.L2NetworkApiInterceptor">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.apimediator.ApiMessageInterceptor"/>
        </zstack:plugin>
    </bean>

    <bean id="L2NetworkManager" class="org.zstack.network.l2.L2NetworkManagerImpl">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.Service"/>
        </zstack:plugin>
    </bean>

    <bean id="L2NoVlanL2NetworkFactory" class="org.zstack.network.l2.L2NoVlanL2NetworkFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.network.l2.L2NetworkFactory"/>
            <zstack:extension interface="org.zstack.network.l2.L2NetworkDefaultMtu"/>
            <zstack:extension interface="org.zstack.header.network.l2.L2NetworkGetVniExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="L2NetworkExtensionPointEmitter" class="org.zstack.network.l2.L2NetworkExtensionPointEmitter">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
        </zstack:plugin>
    </bean>

    <bean id="L3NetworkManager" class="org.zstack.network.l3.L3NetworkManagerImpl">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.Service"/>
            <zstack:extension interface="org.zstack.header.identity.ReportQuotaExtensionPoint"/>
            <zstack:extension interface="org.zstack.header.identity.ResourceOwnerPreChangeExtensionPoint"/>
            <zstack:extension interface="org.zstack.header.managementnode.PrepareDbInitialValueExtensionPoint" />
            <zstack:extension interface="org.zstack.identity.ResourceSharingExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="L3BasicNetworkFactory" class="org.zstack.network.l3.L3BasicNetworkFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.L3NetworkFactory"/>
        </zstack:plugin>
    </bean>

    <bean id="L3NetworkExtensionPointEmitter" class="org.zstack.network.l3.L3NetworkExtensionPointEmitter">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
        </zstack:plugin>
    </bean>

    <bean id="FirstAvailableIpAllocatorStrategy" class="org.zstack.network.l3.FirstAvailableIpAllocatorStrategy">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpAllocatorStrategy"/>
        </zstack:plugin>
    </bean>

    <bean id="RandomIpAllocatorStrategy" class="org.zstack.network.l3.RandomIpAllocatorStrategy">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpAllocatorStrategy"/>
        </zstack:plugin>
    </bean>

    <bean id="RandomIpv6AllocatorStrategy" class="org.zstack.network.l3.RandomIpv6AllocatorStrategy">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpAllocatorStrategy"/>
        </zstack:plugin>
    </bean>

    <bean id="FirstAvailableIpv6AllocatorStrategy" class="org.zstack.network.l3.FirstAvailableIpv6AllocatorStrategy">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpAllocatorStrategy"/>
        </zstack:plugin>
    </bean>

    <bean id="NetworkServiceManager"
          class="org.zstack.network.service.NetworkServiceManagerImpl">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.Service"/>
            <zstack:extension interface="org.zstack.header.vm.PreVmInstantiateResourceExtensionPoint" order="-1"/>
            <zstack:extension interface="org.zstack.header.vm.VmReleaseResourceExtensionPoint" order="-1"/>
            <zstack:extension interface="org.zstack.header.vm.PostVmInstantiateResourceExtensionPoint"/>
            <zstack:extension interface="org.zstack.header.vm.ReleaseNetworkServiceOnDetachingNicExtensionPoint"/>
            <zstack:extension interface="org.zstack.header.vm.InstantiateResourceOnAttachingNicExtensionPoint" order="-1"/>
            <zstack:extension interface="org.zstack.header.vm.VmNetworkServiceOnChangeIPExtensionPoint" order="-1"/>
        </zstack:plugin>
    </bean>

    <bean id="L2VlanNetworkFactory" class="org.zstack.network.l2.L2VlanNetworkFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component"/>
            <zstack:extension interface="org.zstack.header.Service"/>
            <zstack:extension interface="org.zstack.header.network.l2.L2NetworkFactory"/>
            <zstack:extension interface="org.zstack.network.l2.L2NetworkDefaultMtu"/>
            <zstack:extension interface="org.zstack.header.network.l2.L2NetworkGetVniExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="L3NetworkCascadeExtension" class="org.zstack.network.l3.L3NetworkCascadeExtension">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.core.cascade.CascadeExtensionPoint"/>
        </zstack:plugin>
    </bean>

    <bean id="L2NetworkCascadeExtension" class="org.zstack.network.l2.L2NetworkCascadeExtension">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.core.cascade.CascadeExtensionPoint"/>
        </zstack:plugin>
    </bean>

    <bean id="IpRangeCascadeExtension" class="org.zstack.network.l3.IpRangeCascadeExtension">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.core.cascade.CascadeExtensionPoint"/>
        </zstack:plugin>
    </bean>

    <bean id="AddressPoolIpRangeFactory" class="org.zstack.network.l3.AddressPoolIpRangeFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpRangeFactory"/>
        </zstack:plugin>
    </bean>

    <bean id="NormalIpRangeFactory" class="org.zstack.network.l3.NormalIpRangeFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.l3.IpRangeFactory"/>
        </zstack:plugin>
    </bean>
</beans>
